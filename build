#!/usr/bin/env node

const WEBSITE_NAME = "Voltaat Learn";
const ORGJS_GIT    = "https://github.com/jeansch/org-js";

const fs = require("fs");
const { execSync } = require('child_process');

let Org;
try {
    Org = require("./org-js/lib/org.js");
} catch (e) {
    console.log("Clonning org.js...");
    execSync(`git clone ${ORGJS_GIT}`);
    console.log("Run the script again");
    process.exit();
}

function gen_html(file) {
    let dirname = file.match(/.*\//)[0];

    // read the org file and add the options
    let org = fs.readFileSync(file).toString();
    org = "#+OPTIONS: toc:nil num:nil\n" + org;

    // inline source files
    for (let m of org.matchAll(/\[\[(.+\.(pde|ino|c|cpp|h|hpp))\]\]/g)) {
        let line = m[0], file = `${dirname}/${m[1]}`;
        let src = fs.readFileSync(file).toString();
        src = `#+begin_src c\n${src}\n#+end_src\n`;
        org = org.replace(line, src);
    }

    // find a cover image
    let cover = undefined;
    for (let m of org.matchAll(/\[\[(.+\.(png|jpg|gif))\]\]/g)) {
        // GIFs are prefered. If non found, pick the last image
        cover = m[1];
        if (cover.endsWith(".gif")) {
            break;
        }
    }

    // meta data
    let meta = {
        title: /#\+TITLE: (.+)/g.exec(org)[1],
        author: /#\+AUTHOR: (.+)/g.exec(org)[1],
        modified: /#\+DATE: (.+)/g.exec(org)[1],
        cover: `${dirname}/${cover}`,
        org: file,
        html: `${file}.html`
    };

    // build the html file
    let parser = new Org.Parser();
    let orgDocument = parser.parse(org);
    let orgHTMLDocument = orgDocument.convert(Org.ConverterHTML, {});
    let html = orgHTMLDocument.toString();
    html = `
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${meta.title}</title>
        <link rel="icon" href="../icon.png">
        <link rel="stylesheet" type="text/css" href="../styles.css">
        <link rel="stylesheet" type="text/css" href="../prism.css">
        <script src="../prism.js"></script>
    </head>
    <body>
        <div class="content">
            ${html}
            <div class="meta">
                Author: ${meta.author} <br>
                Last modified: ${meta.modified}
            </div>
        </div>
    </body>
</html>`;
    fs.writeFileSync(meta.html, html);

    return meta;
}

function main() {
    let index = `<html><head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${WEBSITE_NAME}</title>
        <link rel="icon" href="icon.png">
        <link rel="stylesheet" type="text/css" href="styles.css">
    </head>
        <body>
            <h1 style="text-align:center;padding-bottom:20px">${WEBSITE_NAME}</h1>
            <div class="content"><div class="index_grid">\n`;
    let orgs = execSync("find -wholename './*/*README.org'")
        .toString().trim().split("\n");
    for (let org of orgs) {
        let meta = gen_html(org);
        console.log(meta.title);
        console.log(meta.html);
        console.log("");

        index += `<div class="card" onclick="location.href='${meta.html}'">
            <img src="${meta.cover}" class="card_img"><br>
            <div class="card_txt">${meta.title}</div></div>\n`;
    }
    index += "</div></div></body></html>";
    fs.writeFileSync("index.html", index);
}

main();
